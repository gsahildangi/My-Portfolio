@import "tailwindcss";

/* Here we are making out own tailwing classes so that we can use them in code and give a custom taste to it */
@theme {

  --color-border: hsl(var(--border));
  --color-background: hsl(var(--background));
  --color-foreground: hsl(var(--foreground));
  /* Content that is above background*/

  --color-primary: hsl(var(--primary));
  --color-primary-foreground: hsl(var(--primary-foreground));

  --color-card: hsl(var(--card));

  --animate-float: float 6s ease-in-out infinite;
  --animate-pulse-subtle: pulse-subtle 4s ease-in-out infinite;
  --animate-fade-in: fade-in 0.7s ease-out forwards;
  --animate-fade-in-delay-1: fade-in 0.7s ease-out 0.2s forwards;
  --animate-fade-in-delay-2: fade-in 0.7s ease-out 0.4s forwards;
  --animate-fade-in-delay-3: fade-in 0.7s ease-out 0.6s forwards;
  --animate-fade-in-delay-4: fade-in 0.7s ease-out 0.8s forwards;


  @keyframes float {

    0%,
    100% {
      transform: translateY(0);
    }

    50% {
      transform: translateY(-10px);
    }
  }

  @keyframes pulse-subtle {

    0%,
    100% {
      opacity: 1;
      transform: scale(1);
    }

    25% {
      opacity: 0.3;
      transform: scale(0.8);
    }

    50% {
      opacity: 0.8;
      transform: scale(1.1);
    }

    75% {
      opacity: 0.4;
      transform: scale(0.9);
    }

  }

  @keyframes fade-in {
    from {
      opacity: 0;
      transform: translateY(20px);
    }

    to {
      opacity: 1;
      transform: translateY(0);
    }
  }

}

/* 
Here i don't want to use the animation as now as i want to make a simple yet beautiful protfolio so here 
Here in section me have animation class and then also 
we have it's keyFrames for the particular classes we will define if we are using or defining animation custom classes.
*/


/* This is the base layer of our css which is root for the simple theme and dark class for dark theme.    */
@layer base {

  /* For the light theme */
  :root {

    --background: 210 40% 98%;
    --foreground: 222 47% 11%;

    --card: 0 0% 100%;

    --primary: 250 47% 60%;
    --primary-foreground: 210 40% 98%;

    --border: 214 32% 91%;
  }

  /* These are the values or you can say we are defing the value for variable that we have created above. */
  .dark {

    --background: 222 47% 4%;
    --foreground: 213 31% 91%;

    --card: 222 47% 8%;

    --primary: 250 65% 65%;
    --primary-foreground: 213 31% 91%;

    --border: 217 33% 20%;
  }

  * {
    @apply border-border;
  }

  html {
    @apply scroll-smooth
  }

  body {
    @apply bg-background text-foreground transition-colors duration-300;
    font-feature-settings: "rlig" 1, "calt" 1;
  }

}

/* to define custom classes we have to use @utility "custom class name"  and now we can use container class
   anywhere in our code and it will work.
*/
@utility container {
  margin-inline: auto;
  padding-inline: 2rem;

  @media (width >=640px) {
    max-width: 640px;
  }

  @media (width >=768px) {
    max-width: 768px;
  }

  @media (width >=1024px) {
    max-width: 1024px;
  }

  @media (width >=1280px) {
    max-width: 1280px;
  }

  @media (width >=1400px) {
    max-width: 1400px;
  }

}

/* 
@apply - is used when we are using a tailwing base class 
Normal css - we can also put normal css as we used in text-glow as text-shadow.

*/

@utility text-glow {
  @apply relative;
  text-shadow: 0 0 10px rgba(167, 139, 250, 0.5);

}

@utility card-hover {
  @apply transition-transform duration-300 hover:scale-[1.02] hover:shadow-lg;

}

@utility gradient-border {
  @apply relative rounded-md;
  background: linear-gradient(to right, hsl(var(--card)), hsl(var(--card)));
  background-clip: padding-box;
  border: 1px solid transparent;
}

@utility cosmic-button {
  @apply px-6 py-2 rounded-full bg-primary text-primary-foreground font-medium transition-all duration-300 hover:shadow-[0_0_10px_rgba(139,92,246,0.5)] hover:scale-105 active:scale-95;
}

@utility star {
  @apply absolute rounded-full bg-white;
  box-shadow: 0 0 10px 2px rgba(255, 255, 255, 0.4)
}

/*
@utility star {}
here we can also give a class to starts which we are using if we are using the animations. 
@utility meteor {}
*/


#root {
  max-width: 100%;
  margin: 0 auto;
  padding: 0;
  text-align: center;
}